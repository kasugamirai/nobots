// Code generated by ent, DO NOT EDIT.

package twitterprofile

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"freefrom.space/nobot/core/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLTE(FieldID, id))
}

// UserID applies equality check predicate on the "user_id" field. It's identical to UserIDEQ.
func UserID(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldUserID, v))
}

// UserName applies equality check predicate on the "user_name" field. It's identical to UserNameEQ.
func UserName(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldUserName, v))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldName, v))
}

// RawYaml applies equality check predicate on the "raw_yaml" field. It's identical to RawYamlEQ.
func RawYaml(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldRawYaml, v))
}

// Active applies equality check predicate on the "active" field. It's identical to ActiveEQ.
func Active(v bool) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldActive, v))
}

// JoinedTime applies equality check predicate on the "joined_time" field. It's identical to JoinedTimeEQ.
func JoinedTime(v time.Time) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldJoinedTime, v))
}

// LikesCount applies equality check predicate on the "likes_count" field. It's identical to LikesCountEQ.
func LikesCount(v int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldLikesCount, v))
}

// ListedCount applies equality check predicate on the "listed_count" field. It's identical to ListedCountEQ.
func ListedCount(v int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldListedCount, v))
}

// FollowersCount applies equality check predicate on the "followers_count" field. It's identical to FollowersCountEQ.
func FollowersCount(v int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldFollowersCount, v))
}

// FollowingCount applies equality check predicate on the "following_count" field. It's identical to FollowingCountEQ.
func FollowingCount(v int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldFollowingCount, v))
}

// FriendsCount applies equality check predicate on the "friends_count" field. It's identical to FriendsCountEQ.
func FriendsCount(v int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldFriendsCount, v))
}

// TwitterCount applies equality check predicate on the "twitter_count" field. It's identical to TwitterCountEQ.
func TwitterCount(v int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldTwitterCount, v))
}

// PinnedNoteID applies equality check predicate on the "pinned_note_id" field. It's identical to PinnedNoteIDEQ.
func PinnedNoteID(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldPinnedNoteID, v))
}

// Avatar applies equality check predicate on the "avatar" field. It's identical to AvatarEQ.
func Avatar(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldAvatar, v))
}

// Banner applies equality check predicate on the "banner" field. It's identical to BannerEQ.
func Banner(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldBanner, v))
}

// Biography applies equality check predicate on the "biography" field. It's identical to BiographyEQ.
func Biography(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldBiography, v))
}

// Birthday applies equality check predicate on the "birthday" field. It's identical to BirthdayEQ.
func Birthday(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldBirthday, v))
}

// Location applies equality check predicate on the "location" field. It's identical to LocationEQ.
func Location(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldLocation, v))
}

// URL applies equality check predicate on the "url" field. It's identical to URLEQ.
func URL(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldURL, v))
}

// Website applies equality check predicate on the "website" field. It's identical to WebsiteEQ.
func Website(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldWebsite, v))
}

// NsecKey applies equality check predicate on the "nsec_key" field. It's identical to NsecKeyEQ.
func NsecKey(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldNsecKey, v))
}

// NpubKey applies equality check predicate on the "npub_key" field. It's identical to NpubKeyEQ.
func NpubKey(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldNpubKey, v))
}

// PrivateKeyHex applies equality check predicate on the "private_key_hex" field. It's identical to PrivateKeyHexEQ.
func PrivateKeyHex(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldPrivateKeyHex, v))
}

// PublicKeyHex applies equality check predicate on the "public_key_hex" field. It's identical to PublicKeyHexEQ.
func PublicKeyHex(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldPublicKeyHex, v))
}

// PublishNostr applies equality check predicate on the "publish_nostr" field. It's identical to PublishNostrEQ.
func PublishNostr(v bool) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldPublishNostr, v))
}

// UserIDEQ applies the EQ predicate on the "user_id" field.
func UserIDEQ(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldUserID, v))
}

// UserIDNEQ applies the NEQ predicate on the "user_id" field.
func UserIDNEQ(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNEQ(FieldUserID, v))
}

// UserIDIn applies the In predicate on the "user_id" field.
func UserIDIn(vs ...string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldIn(FieldUserID, vs...))
}

// UserIDNotIn applies the NotIn predicate on the "user_id" field.
func UserIDNotIn(vs ...string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNotIn(FieldUserID, vs...))
}

// UserIDGT applies the GT predicate on the "user_id" field.
func UserIDGT(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGT(FieldUserID, v))
}

// UserIDGTE applies the GTE predicate on the "user_id" field.
func UserIDGTE(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGTE(FieldUserID, v))
}

// UserIDLT applies the LT predicate on the "user_id" field.
func UserIDLT(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLT(FieldUserID, v))
}

// UserIDLTE applies the LTE predicate on the "user_id" field.
func UserIDLTE(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLTE(FieldUserID, v))
}

// UserIDContains applies the Contains predicate on the "user_id" field.
func UserIDContains(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldContains(FieldUserID, v))
}

// UserIDHasPrefix applies the HasPrefix predicate on the "user_id" field.
func UserIDHasPrefix(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldHasPrefix(FieldUserID, v))
}

// UserIDHasSuffix applies the HasSuffix predicate on the "user_id" field.
func UserIDHasSuffix(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldHasSuffix(FieldUserID, v))
}

// UserIDEqualFold applies the EqualFold predicate on the "user_id" field.
func UserIDEqualFold(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEqualFold(FieldUserID, v))
}

// UserIDContainsFold applies the ContainsFold predicate on the "user_id" field.
func UserIDContainsFold(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldContainsFold(FieldUserID, v))
}

// UserNameEQ applies the EQ predicate on the "user_name" field.
func UserNameEQ(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldUserName, v))
}

// UserNameNEQ applies the NEQ predicate on the "user_name" field.
func UserNameNEQ(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNEQ(FieldUserName, v))
}

// UserNameIn applies the In predicate on the "user_name" field.
func UserNameIn(vs ...string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldIn(FieldUserName, vs...))
}

// UserNameNotIn applies the NotIn predicate on the "user_name" field.
func UserNameNotIn(vs ...string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNotIn(FieldUserName, vs...))
}

// UserNameGT applies the GT predicate on the "user_name" field.
func UserNameGT(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGT(FieldUserName, v))
}

// UserNameGTE applies the GTE predicate on the "user_name" field.
func UserNameGTE(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGTE(FieldUserName, v))
}

// UserNameLT applies the LT predicate on the "user_name" field.
func UserNameLT(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLT(FieldUserName, v))
}

// UserNameLTE applies the LTE predicate on the "user_name" field.
func UserNameLTE(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLTE(FieldUserName, v))
}

// UserNameContains applies the Contains predicate on the "user_name" field.
func UserNameContains(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldContains(FieldUserName, v))
}

// UserNameHasPrefix applies the HasPrefix predicate on the "user_name" field.
func UserNameHasPrefix(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldHasPrefix(FieldUserName, v))
}

// UserNameHasSuffix applies the HasSuffix predicate on the "user_name" field.
func UserNameHasSuffix(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldHasSuffix(FieldUserName, v))
}

// UserNameEqualFold applies the EqualFold predicate on the "user_name" field.
func UserNameEqualFold(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEqualFold(FieldUserName, v))
}

// UserNameContainsFold applies the ContainsFold predicate on the "user_name" field.
func UserNameContainsFold(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldContainsFold(FieldUserName, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldHasSuffix(FieldName, v))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldContainsFold(FieldName, v))
}

// RawYamlEQ applies the EQ predicate on the "raw_yaml" field.
func RawYamlEQ(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldRawYaml, v))
}

// RawYamlNEQ applies the NEQ predicate on the "raw_yaml" field.
func RawYamlNEQ(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNEQ(FieldRawYaml, v))
}

// RawYamlIn applies the In predicate on the "raw_yaml" field.
func RawYamlIn(vs ...string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldIn(FieldRawYaml, vs...))
}

// RawYamlNotIn applies the NotIn predicate on the "raw_yaml" field.
func RawYamlNotIn(vs ...string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNotIn(FieldRawYaml, vs...))
}

// RawYamlGT applies the GT predicate on the "raw_yaml" field.
func RawYamlGT(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGT(FieldRawYaml, v))
}

// RawYamlGTE applies the GTE predicate on the "raw_yaml" field.
func RawYamlGTE(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGTE(FieldRawYaml, v))
}

// RawYamlLT applies the LT predicate on the "raw_yaml" field.
func RawYamlLT(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLT(FieldRawYaml, v))
}

// RawYamlLTE applies the LTE predicate on the "raw_yaml" field.
func RawYamlLTE(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLTE(FieldRawYaml, v))
}

// RawYamlContains applies the Contains predicate on the "raw_yaml" field.
func RawYamlContains(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldContains(FieldRawYaml, v))
}

// RawYamlHasPrefix applies the HasPrefix predicate on the "raw_yaml" field.
func RawYamlHasPrefix(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldHasPrefix(FieldRawYaml, v))
}

// RawYamlHasSuffix applies the HasSuffix predicate on the "raw_yaml" field.
func RawYamlHasSuffix(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldHasSuffix(FieldRawYaml, v))
}

// RawYamlEqualFold applies the EqualFold predicate on the "raw_yaml" field.
func RawYamlEqualFold(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEqualFold(FieldRawYaml, v))
}

// RawYamlContainsFold applies the ContainsFold predicate on the "raw_yaml" field.
func RawYamlContainsFold(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldContainsFold(FieldRawYaml, v))
}

// ActiveEQ applies the EQ predicate on the "active" field.
func ActiveEQ(v bool) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldActive, v))
}

// ActiveNEQ applies the NEQ predicate on the "active" field.
func ActiveNEQ(v bool) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNEQ(FieldActive, v))
}

// ActiveIsNil applies the IsNil predicate on the "active" field.
func ActiveIsNil() predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldIsNull(FieldActive))
}

// ActiveNotNil applies the NotNil predicate on the "active" field.
func ActiveNotNil() predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNotNull(FieldActive))
}

// JoinedTimeEQ applies the EQ predicate on the "joined_time" field.
func JoinedTimeEQ(v time.Time) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldJoinedTime, v))
}

// JoinedTimeNEQ applies the NEQ predicate on the "joined_time" field.
func JoinedTimeNEQ(v time.Time) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNEQ(FieldJoinedTime, v))
}

// JoinedTimeIn applies the In predicate on the "joined_time" field.
func JoinedTimeIn(vs ...time.Time) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldIn(FieldJoinedTime, vs...))
}

// JoinedTimeNotIn applies the NotIn predicate on the "joined_time" field.
func JoinedTimeNotIn(vs ...time.Time) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNotIn(FieldJoinedTime, vs...))
}

// JoinedTimeGT applies the GT predicate on the "joined_time" field.
func JoinedTimeGT(v time.Time) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGT(FieldJoinedTime, v))
}

// JoinedTimeGTE applies the GTE predicate on the "joined_time" field.
func JoinedTimeGTE(v time.Time) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGTE(FieldJoinedTime, v))
}

// JoinedTimeLT applies the LT predicate on the "joined_time" field.
func JoinedTimeLT(v time.Time) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLT(FieldJoinedTime, v))
}

// JoinedTimeLTE applies the LTE predicate on the "joined_time" field.
func JoinedTimeLTE(v time.Time) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLTE(FieldJoinedTime, v))
}

// JoinedTimeIsNil applies the IsNil predicate on the "joined_time" field.
func JoinedTimeIsNil() predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldIsNull(FieldJoinedTime))
}

// JoinedTimeNotNil applies the NotNil predicate on the "joined_time" field.
func JoinedTimeNotNil() predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNotNull(FieldJoinedTime))
}

// LikesCountEQ applies the EQ predicate on the "likes_count" field.
func LikesCountEQ(v int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldLikesCount, v))
}

// LikesCountNEQ applies the NEQ predicate on the "likes_count" field.
func LikesCountNEQ(v int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNEQ(FieldLikesCount, v))
}

// LikesCountIn applies the In predicate on the "likes_count" field.
func LikesCountIn(vs ...int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldIn(FieldLikesCount, vs...))
}

// LikesCountNotIn applies the NotIn predicate on the "likes_count" field.
func LikesCountNotIn(vs ...int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNotIn(FieldLikesCount, vs...))
}

// LikesCountGT applies the GT predicate on the "likes_count" field.
func LikesCountGT(v int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGT(FieldLikesCount, v))
}

// LikesCountGTE applies the GTE predicate on the "likes_count" field.
func LikesCountGTE(v int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGTE(FieldLikesCount, v))
}

// LikesCountLT applies the LT predicate on the "likes_count" field.
func LikesCountLT(v int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLT(FieldLikesCount, v))
}

// LikesCountLTE applies the LTE predicate on the "likes_count" field.
func LikesCountLTE(v int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLTE(FieldLikesCount, v))
}

// LikesCountIsNil applies the IsNil predicate on the "likes_count" field.
func LikesCountIsNil() predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldIsNull(FieldLikesCount))
}

// LikesCountNotNil applies the NotNil predicate on the "likes_count" field.
func LikesCountNotNil() predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNotNull(FieldLikesCount))
}

// ListedCountEQ applies the EQ predicate on the "listed_count" field.
func ListedCountEQ(v int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldListedCount, v))
}

// ListedCountNEQ applies the NEQ predicate on the "listed_count" field.
func ListedCountNEQ(v int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNEQ(FieldListedCount, v))
}

// ListedCountIn applies the In predicate on the "listed_count" field.
func ListedCountIn(vs ...int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldIn(FieldListedCount, vs...))
}

// ListedCountNotIn applies the NotIn predicate on the "listed_count" field.
func ListedCountNotIn(vs ...int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNotIn(FieldListedCount, vs...))
}

// ListedCountGT applies the GT predicate on the "listed_count" field.
func ListedCountGT(v int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGT(FieldListedCount, v))
}

// ListedCountGTE applies the GTE predicate on the "listed_count" field.
func ListedCountGTE(v int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGTE(FieldListedCount, v))
}

// ListedCountLT applies the LT predicate on the "listed_count" field.
func ListedCountLT(v int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLT(FieldListedCount, v))
}

// ListedCountLTE applies the LTE predicate on the "listed_count" field.
func ListedCountLTE(v int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLTE(FieldListedCount, v))
}

// ListedCountIsNil applies the IsNil predicate on the "listed_count" field.
func ListedCountIsNil() predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldIsNull(FieldListedCount))
}

// ListedCountNotNil applies the NotNil predicate on the "listed_count" field.
func ListedCountNotNil() predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNotNull(FieldListedCount))
}

// FollowersCountEQ applies the EQ predicate on the "followers_count" field.
func FollowersCountEQ(v int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldFollowersCount, v))
}

// FollowersCountNEQ applies the NEQ predicate on the "followers_count" field.
func FollowersCountNEQ(v int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNEQ(FieldFollowersCount, v))
}

// FollowersCountIn applies the In predicate on the "followers_count" field.
func FollowersCountIn(vs ...int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldIn(FieldFollowersCount, vs...))
}

// FollowersCountNotIn applies the NotIn predicate on the "followers_count" field.
func FollowersCountNotIn(vs ...int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNotIn(FieldFollowersCount, vs...))
}

// FollowersCountGT applies the GT predicate on the "followers_count" field.
func FollowersCountGT(v int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGT(FieldFollowersCount, v))
}

// FollowersCountGTE applies the GTE predicate on the "followers_count" field.
func FollowersCountGTE(v int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGTE(FieldFollowersCount, v))
}

// FollowersCountLT applies the LT predicate on the "followers_count" field.
func FollowersCountLT(v int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLT(FieldFollowersCount, v))
}

// FollowersCountLTE applies the LTE predicate on the "followers_count" field.
func FollowersCountLTE(v int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLTE(FieldFollowersCount, v))
}

// FollowersCountIsNil applies the IsNil predicate on the "followers_count" field.
func FollowersCountIsNil() predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldIsNull(FieldFollowersCount))
}

// FollowersCountNotNil applies the NotNil predicate on the "followers_count" field.
func FollowersCountNotNil() predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNotNull(FieldFollowersCount))
}

// FollowingCountEQ applies the EQ predicate on the "following_count" field.
func FollowingCountEQ(v int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldFollowingCount, v))
}

// FollowingCountNEQ applies the NEQ predicate on the "following_count" field.
func FollowingCountNEQ(v int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNEQ(FieldFollowingCount, v))
}

// FollowingCountIn applies the In predicate on the "following_count" field.
func FollowingCountIn(vs ...int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldIn(FieldFollowingCount, vs...))
}

// FollowingCountNotIn applies the NotIn predicate on the "following_count" field.
func FollowingCountNotIn(vs ...int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNotIn(FieldFollowingCount, vs...))
}

// FollowingCountGT applies the GT predicate on the "following_count" field.
func FollowingCountGT(v int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGT(FieldFollowingCount, v))
}

// FollowingCountGTE applies the GTE predicate on the "following_count" field.
func FollowingCountGTE(v int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGTE(FieldFollowingCount, v))
}

// FollowingCountLT applies the LT predicate on the "following_count" field.
func FollowingCountLT(v int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLT(FieldFollowingCount, v))
}

// FollowingCountLTE applies the LTE predicate on the "following_count" field.
func FollowingCountLTE(v int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLTE(FieldFollowingCount, v))
}

// FollowingCountIsNil applies the IsNil predicate on the "following_count" field.
func FollowingCountIsNil() predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldIsNull(FieldFollowingCount))
}

// FollowingCountNotNil applies the NotNil predicate on the "following_count" field.
func FollowingCountNotNil() predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNotNull(FieldFollowingCount))
}

// FriendsCountEQ applies the EQ predicate on the "friends_count" field.
func FriendsCountEQ(v int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldFriendsCount, v))
}

// FriendsCountNEQ applies the NEQ predicate on the "friends_count" field.
func FriendsCountNEQ(v int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNEQ(FieldFriendsCount, v))
}

// FriendsCountIn applies the In predicate on the "friends_count" field.
func FriendsCountIn(vs ...int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldIn(FieldFriendsCount, vs...))
}

// FriendsCountNotIn applies the NotIn predicate on the "friends_count" field.
func FriendsCountNotIn(vs ...int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNotIn(FieldFriendsCount, vs...))
}

// FriendsCountGT applies the GT predicate on the "friends_count" field.
func FriendsCountGT(v int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGT(FieldFriendsCount, v))
}

// FriendsCountGTE applies the GTE predicate on the "friends_count" field.
func FriendsCountGTE(v int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGTE(FieldFriendsCount, v))
}

// FriendsCountLT applies the LT predicate on the "friends_count" field.
func FriendsCountLT(v int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLT(FieldFriendsCount, v))
}

// FriendsCountLTE applies the LTE predicate on the "friends_count" field.
func FriendsCountLTE(v int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLTE(FieldFriendsCount, v))
}

// FriendsCountIsNil applies the IsNil predicate on the "friends_count" field.
func FriendsCountIsNil() predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldIsNull(FieldFriendsCount))
}

// FriendsCountNotNil applies the NotNil predicate on the "friends_count" field.
func FriendsCountNotNil() predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNotNull(FieldFriendsCount))
}

// TwitterCountEQ applies the EQ predicate on the "twitter_count" field.
func TwitterCountEQ(v int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldTwitterCount, v))
}

// TwitterCountNEQ applies the NEQ predicate on the "twitter_count" field.
func TwitterCountNEQ(v int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNEQ(FieldTwitterCount, v))
}

// TwitterCountIn applies the In predicate on the "twitter_count" field.
func TwitterCountIn(vs ...int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldIn(FieldTwitterCount, vs...))
}

// TwitterCountNotIn applies the NotIn predicate on the "twitter_count" field.
func TwitterCountNotIn(vs ...int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNotIn(FieldTwitterCount, vs...))
}

// TwitterCountGT applies the GT predicate on the "twitter_count" field.
func TwitterCountGT(v int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGT(FieldTwitterCount, v))
}

// TwitterCountGTE applies the GTE predicate on the "twitter_count" field.
func TwitterCountGTE(v int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGTE(FieldTwitterCount, v))
}

// TwitterCountLT applies the LT predicate on the "twitter_count" field.
func TwitterCountLT(v int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLT(FieldTwitterCount, v))
}

// TwitterCountLTE applies the LTE predicate on the "twitter_count" field.
func TwitterCountLTE(v int) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLTE(FieldTwitterCount, v))
}

// TwitterCountIsNil applies the IsNil predicate on the "twitter_count" field.
func TwitterCountIsNil() predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldIsNull(FieldTwitterCount))
}

// TwitterCountNotNil applies the NotNil predicate on the "twitter_count" field.
func TwitterCountNotNil() predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNotNull(FieldTwitterCount))
}

// PinnedNoteIDEQ applies the EQ predicate on the "pinned_note_id" field.
func PinnedNoteIDEQ(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldPinnedNoteID, v))
}

// PinnedNoteIDNEQ applies the NEQ predicate on the "pinned_note_id" field.
func PinnedNoteIDNEQ(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNEQ(FieldPinnedNoteID, v))
}

// PinnedNoteIDIn applies the In predicate on the "pinned_note_id" field.
func PinnedNoteIDIn(vs ...string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldIn(FieldPinnedNoteID, vs...))
}

// PinnedNoteIDNotIn applies the NotIn predicate on the "pinned_note_id" field.
func PinnedNoteIDNotIn(vs ...string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNotIn(FieldPinnedNoteID, vs...))
}

// PinnedNoteIDGT applies the GT predicate on the "pinned_note_id" field.
func PinnedNoteIDGT(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGT(FieldPinnedNoteID, v))
}

// PinnedNoteIDGTE applies the GTE predicate on the "pinned_note_id" field.
func PinnedNoteIDGTE(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGTE(FieldPinnedNoteID, v))
}

// PinnedNoteIDLT applies the LT predicate on the "pinned_note_id" field.
func PinnedNoteIDLT(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLT(FieldPinnedNoteID, v))
}

// PinnedNoteIDLTE applies the LTE predicate on the "pinned_note_id" field.
func PinnedNoteIDLTE(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLTE(FieldPinnedNoteID, v))
}

// PinnedNoteIDContains applies the Contains predicate on the "pinned_note_id" field.
func PinnedNoteIDContains(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldContains(FieldPinnedNoteID, v))
}

// PinnedNoteIDHasPrefix applies the HasPrefix predicate on the "pinned_note_id" field.
func PinnedNoteIDHasPrefix(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldHasPrefix(FieldPinnedNoteID, v))
}

// PinnedNoteIDHasSuffix applies the HasSuffix predicate on the "pinned_note_id" field.
func PinnedNoteIDHasSuffix(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldHasSuffix(FieldPinnedNoteID, v))
}

// PinnedNoteIDIsNil applies the IsNil predicate on the "pinned_note_id" field.
func PinnedNoteIDIsNil() predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldIsNull(FieldPinnedNoteID))
}

// PinnedNoteIDNotNil applies the NotNil predicate on the "pinned_note_id" field.
func PinnedNoteIDNotNil() predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNotNull(FieldPinnedNoteID))
}

// PinnedNoteIDEqualFold applies the EqualFold predicate on the "pinned_note_id" field.
func PinnedNoteIDEqualFold(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEqualFold(FieldPinnedNoteID, v))
}

// PinnedNoteIDContainsFold applies the ContainsFold predicate on the "pinned_note_id" field.
func PinnedNoteIDContainsFold(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldContainsFold(FieldPinnedNoteID, v))
}

// AvatarEQ applies the EQ predicate on the "avatar" field.
func AvatarEQ(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldAvatar, v))
}

// AvatarNEQ applies the NEQ predicate on the "avatar" field.
func AvatarNEQ(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNEQ(FieldAvatar, v))
}

// AvatarIn applies the In predicate on the "avatar" field.
func AvatarIn(vs ...string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldIn(FieldAvatar, vs...))
}

// AvatarNotIn applies the NotIn predicate on the "avatar" field.
func AvatarNotIn(vs ...string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNotIn(FieldAvatar, vs...))
}

// AvatarGT applies the GT predicate on the "avatar" field.
func AvatarGT(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGT(FieldAvatar, v))
}

// AvatarGTE applies the GTE predicate on the "avatar" field.
func AvatarGTE(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGTE(FieldAvatar, v))
}

// AvatarLT applies the LT predicate on the "avatar" field.
func AvatarLT(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLT(FieldAvatar, v))
}

// AvatarLTE applies the LTE predicate on the "avatar" field.
func AvatarLTE(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLTE(FieldAvatar, v))
}

// AvatarContains applies the Contains predicate on the "avatar" field.
func AvatarContains(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldContains(FieldAvatar, v))
}

// AvatarHasPrefix applies the HasPrefix predicate on the "avatar" field.
func AvatarHasPrefix(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldHasPrefix(FieldAvatar, v))
}

// AvatarHasSuffix applies the HasSuffix predicate on the "avatar" field.
func AvatarHasSuffix(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldHasSuffix(FieldAvatar, v))
}

// AvatarIsNil applies the IsNil predicate on the "avatar" field.
func AvatarIsNil() predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldIsNull(FieldAvatar))
}

// AvatarNotNil applies the NotNil predicate on the "avatar" field.
func AvatarNotNil() predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNotNull(FieldAvatar))
}

// AvatarEqualFold applies the EqualFold predicate on the "avatar" field.
func AvatarEqualFold(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEqualFold(FieldAvatar, v))
}

// AvatarContainsFold applies the ContainsFold predicate on the "avatar" field.
func AvatarContainsFold(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldContainsFold(FieldAvatar, v))
}

// BannerEQ applies the EQ predicate on the "banner" field.
func BannerEQ(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldBanner, v))
}

// BannerNEQ applies the NEQ predicate on the "banner" field.
func BannerNEQ(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNEQ(FieldBanner, v))
}

// BannerIn applies the In predicate on the "banner" field.
func BannerIn(vs ...string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldIn(FieldBanner, vs...))
}

// BannerNotIn applies the NotIn predicate on the "banner" field.
func BannerNotIn(vs ...string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNotIn(FieldBanner, vs...))
}

// BannerGT applies the GT predicate on the "banner" field.
func BannerGT(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGT(FieldBanner, v))
}

// BannerGTE applies the GTE predicate on the "banner" field.
func BannerGTE(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGTE(FieldBanner, v))
}

// BannerLT applies the LT predicate on the "banner" field.
func BannerLT(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLT(FieldBanner, v))
}

// BannerLTE applies the LTE predicate on the "banner" field.
func BannerLTE(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLTE(FieldBanner, v))
}

// BannerContains applies the Contains predicate on the "banner" field.
func BannerContains(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldContains(FieldBanner, v))
}

// BannerHasPrefix applies the HasPrefix predicate on the "banner" field.
func BannerHasPrefix(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldHasPrefix(FieldBanner, v))
}

// BannerHasSuffix applies the HasSuffix predicate on the "banner" field.
func BannerHasSuffix(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldHasSuffix(FieldBanner, v))
}

// BannerIsNil applies the IsNil predicate on the "banner" field.
func BannerIsNil() predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldIsNull(FieldBanner))
}

// BannerNotNil applies the NotNil predicate on the "banner" field.
func BannerNotNil() predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNotNull(FieldBanner))
}

// BannerEqualFold applies the EqualFold predicate on the "banner" field.
func BannerEqualFold(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEqualFold(FieldBanner, v))
}

// BannerContainsFold applies the ContainsFold predicate on the "banner" field.
func BannerContainsFold(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldContainsFold(FieldBanner, v))
}

// BiographyEQ applies the EQ predicate on the "biography" field.
func BiographyEQ(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldBiography, v))
}

// BiographyNEQ applies the NEQ predicate on the "biography" field.
func BiographyNEQ(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNEQ(FieldBiography, v))
}

// BiographyIn applies the In predicate on the "biography" field.
func BiographyIn(vs ...string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldIn(FieldBiography, vs...))
}

// BiographyNotIn applies the NotIn predicate on the "biography" field.
func BiographyNotIn(vs ...string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNotIn(FieldBiography, vs...))
}

// BiographyGT applies the GT predicate on the "biography" field.
func BiographyGT(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGT(FieldBiography, v))
}

// BiographyGTE applies the GTE predicate on the "biography" field.
func BiographyGTE(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGTE(FieldBiography, v))
}

// BiographyLT applies the LT predicate on the "biography" field.
func BiographyLT(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLT(FieldBiography, v))
}

// BiographyLTE applies the LTE predicate on the "biography" field.
func BiographyLTE(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLTE(FieldBiography, v))
}

// BiographyContains applies the Contains predicate on the "biography" field.
func BiographyContains(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldContains(FieldBiography, v))
}

// BiographyHasPrefix applies the HasPrefix predicate on the "biography" field.
func BiographyHasPrefix(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldHasPrefix(FieldBiography, v))
}

// BiographyHasSuffix applies the HasSuffix predicate on the "biography" field.
func BiographyHasSuffix(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldHasSuffix(FieldBiography, v))
}

// BiographyIsNil applies the IsNil predicate on the "biography" field.
func BiographyIsNil() predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldIsNull(FieldBiography))
}

// BiographyNotNil applies the NotNil predicate on the "biography" field.
func BiographyNotNil() predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNotNull(FieldBiography))
}

// BiographyEqualFold applies the EqualFold predicate on the "biography" field.
func BiographyEqualFold(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEqualFold(FieldBiography, v))
}

// BiographyContainsFold applies the ContainsFold predicate on the "biography" field.
func BiographyContainsFold(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldContainsFold(FieldBiography, v))
}

// BirthdayEQ applies the EQ predicate on the "birthday" field.
func BirthdayEQ(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldBirthday, v))
}

// BirthdayNEQ applies the NEQ predicate on the "birthday" field.
func BirthdayNEQ(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNEQ(FieldBirthday, v))
}

// BirthdayIn applies the In predicate on the "birthday" field.
func BirthdayIn(vs ...string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldIn(FieldBirthday, vs...))
}

// BirthdayNotIn applies the NotIn predicate on the "birthday" field.
func BirthdayNotIn(vs ...string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNotIn(FieldBirthday, vs...))
}

// BirthdayGT applies the GT predicate on the "birthday" field.
func BirthdayGT(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGT(FieldBirthday, v))
}

// BirthdayGTE applies the GTE predicate on the "birthday" field.
func BirthdayGTE(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGTE(FieldBirthday, v))
}

// BirthdayLT applies the LT predicate on the "birthday" field.
func BirthdayLT(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLT(FieldBirthday, v))
}

// BirthdayLTE applies the LTE predicate on the "birthday" field.
func BirthdayLTE(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLTE(FieldBirthday, v))
}

// BirthdayContains applies the Contains predicate on the "birthday" field.
func BirthdayContains(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldContains(FieldBirthday, v))
}

// BirthdayHasPrefix applies the HasPrefix predicate on the "birthday" field.
func BirthdayHasPrefix(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldHasPrefix(FieldBirthday, v))
}

// BirthdayHasSuffix applies the HasSuffix predicate on the "birthday" field.
func BirthdayHasSuffix(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldHasSuffix(FieldBirthday, v))
}

// BirthdayIsNil applies the IsNil predicate on the "birthday" field.
func BirthdayIsNil() predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldIsNull(FieldBirthday))
}

// BirthdayNotNil applies the NotNil predicate on the "birthday" field.
func BirthdayNotNil() predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNotNull(FieldBirthday))
}

// BirthdayEqualFold applies the EqualFold predicate on the "birthday" field.
func BirthdayEqualFold(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEqualFold(FieldBirthday, v))
}

// BirthdayContainsFold applies the ContainsFold predicate on the "birthday" field.
func BirthdayContainsFold(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldContainsFold(FieldBirthday, v))
}

// LocationEQ applies the EQ predicate on the "location" field.
func LocationEQ(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldLocation, v))
}

// LocationNEQ applies the NEQ predicate on the "location" field.
func LocationNEQ(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNEQ(FieldLocation, v))
}

// LocationIn applies the In predicate on the "location" field.
func LocationIn(vs ...string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldIn(FieldLocation, vs...))
}

// LocationNotIn applies the NotIn predicate on the "location" field.
func LocationNotIn(vs ...string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNotIn(FieldLocation, vs...))
}

// LocationGT applies the GT predicate on the "location" field.
func LocationGT(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGT(FieldLocation, v))
}

// LocationGTE applies the GTE predicate on the "location" field.
func LocationGTE(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGTE(FieldLocation, v))
}

// LocationLT applies the LT predicate on the "location" field.
func LocationLT(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLT(FieldLocation, v))
}

// LocationLTE applies the LTE predicate on the "location" field.
func LocationLTE(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLTE(FieldLocation, v))
}

// LocationContains applies the Contains predicate on the "location" field.
func LocationContains(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldContains(FieldLocation, v))
}

// LocationHasPrefix applies the HasPrefix predicate on the "location" field.
func LocationHasPrefix(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldHasPrefix(FieldLocation, v))
}

// LocationHasSuffix applies the HasSuffix predicate on the "location" field.
func LocationHasSuffix(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldHasSuffix(FieldLocation, v))
}

// LocationIsNil applies the IsNil predicate on the "location" field.
func LocationIsNil() predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldIsNull(FieldLocation))
}

// LocationNotNil applies the NotNil predicate on the "location" field.
func LocationNotNil() predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNotNull(FieldLocation))
}

// LocationEqualFold applies the EqualFold predicate on the "location" field.
func LocationEqualFold(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEqualFold(FieldLocation, v))
}

// LocationContainsFold applies the ContainsFold predicate on the "location" field.
func LocationContainsFold(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldContainsFold(FieldLocation, v))
}

// URLEQ applies the EQ predicate on the "url" field.
func URLEQ(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldURL, v))
}

// URLNEQ applies the NEQ predicate on the "url" field.
func URLNEQ(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNEQ(FieldURL, v))
}

// URLIn applies the In predicate on the "url" field.
func URLIn(vs ...string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldIn(FieldURL, vs...))
}

// URLNotIn applies the NotIn predicate on the "url" field.
func URLNotIn(vs ...string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNotIn(FieldURL, vs...))
}

// URLGT applies the GT predicate on the "url" field.
func URLGT(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGT(FieldURL, v))
}

// URLGTE applies the GTE predicate on the "url" field.
func URLGTE(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGTE(FieldURL, v))
}

// URLLT applies the LT predicate on the "url" field.
func URLLT(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLT(FieldURL, v))
}

// URLLTE applies the LTE predicate on the "url" field.
func URLLTE(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLTE(FieldURL, v))
}

// URLContains applies the Contains predicate on the "url" field.
func URLContains(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldContains(FieldURL, v))
}

// URLHasPrefix applies the HasPrefix predicate on the "url" field.
func URLHasPrefix(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldHasPrefix(FieldURL, v))
}

// URLHasSuffix applies the HasSuffix predicate on the "url" field.
func URLHasSuffix(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldHasSuffix(FieldURL, v))
}

// URLIsNil applies the IsNil predicate on the "url" field.
func URLIsNil() predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldIsNull(FieldURL))
}

// URLNotNil applies the NotNil predicate on the "url" field.
func URLNotNil() predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNotNull(FieldURL))
}

// URLEqualFold applies the EqualFold predicate on the "url" field.
func URLEqualFold(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEqualFold(FieldURL, v))
}

// URLContainsFold applies the ContainsFold predicate on the "url" field.
func URLContainsFold(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldContainsFold(FieldURL, v))
}

// WebsiteEQ applies the EQ predicate on the "website" field.
func WebsiteEQ(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldWebsite, v))
}

// WebsiteNEQ applies the NEQ predicate on the "website" field.
func WebsiteNEQ(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNEQ(FieldWebsite, v))
}

// WebsiteIn applies the In predicate on the "website" field.
func WebsiteIn(vs ...string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldIn(FieldWebsite, vs...))
}

// WebsiteNotIn applies the NotIn predicate on the "website" field.
func WebsiteNotIn(vs ...string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNotIn(FieldWebsite, vs...))
}

// WebsiteGT applies the GT predicate on the "website" field.
func WebsiteGT(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGT(FieldWebsite, v))
}

// WebsiteGTE applies the GTE predicate on the "website" field.
func WebsiteGTE(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGTE(FieldWebsite, v))
}

// WebsiteLT applies the LT predicate on the "website" field.
func WebsiteLT(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLT(FieldWebsite, v))
}

// WebsiteLTE applies the LTE predicate on the "website" field.
func WebsiteLTE(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLTE(FieldWebsite, v))
}

// WebsiteContains applies the Contains predicate on the "website" field.
func WebsiteContains(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldContains(FieldWebsite, v))
}

// WebsiteHasPrefix applies the HasPrefix predicate on the "website" field.
func WebsiteHasPrefix(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldHasPrefix(FieldWebsite, v))
}

// WebsiteHasSuffix applies the HasSuffix predicate on the "website" field.
func WebsiteHasSuffix(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldHasSuffix(FieldWebsite, v))
}

// WebsiteIsNil applies the IsNil predicate on the "website" field.
func WebsiteIsNil() predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldIsNull(FieldWebsite))
}

// WebsiteNotNil applies the NotNil predicate on the "website" field.
func WebsiteNotNil() predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNotNull(FieldWebsite))
}

// WebsiteEqualFold applies the EqualFold predicate on the "website" field.
func WebsiteEqualFold(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEqualFold(FieldWebsite, v))
}

// WebsiteContainsFold applies the ContainsFold predicate on the "website" field.
func WebsiteContainsFold(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldContainsFold(FieldWebsite, v))
}

// NsecKeyEQ applies the EQ predicate on the "nsec_key" field.
func NsecKeyEQ(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldNsecKey, v))
}

// NsecKeyNEQ applies the NEQ predicate on the "nsec_key" field.
func NsecKeyNEQ(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNEQ(FieldNsecKey, v))
}

// NsecKeyIn applies the In predicate on the "nsec_key" field.
func NsecKeyIn(vs ...string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldIn(FieldNsecKey, vs...))
}

// NsecKeyNotIn applies the NotIn predicate on the "nsec_key" field.
func NsecKeyNotIn(vs ...string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNotIn(FieldNsecKey, vs...))
}

// NsecKeyGT applies the GT predicate on the "nsec_key" field.
func NsecKeyGT(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGT(FieldNsecKey, v))
}

// NsecKeyGTE applies the GTE predicate on the "nsec_key" field.
func NsecKeyGTE(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGTE(FieldNsecKey, v))
}

// NsecKeyLT applies the LT predicate on the "nsec_key" field.
func NsecKeyLT(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLT(FieldNsecKey, v))
}

// NsecKeyLTE applies the LTE predicate on the "nsec_key" field.
func NsecKeyLTE(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLTE(FieldNsecKey, v))
}

// NsecKeyContains applies the Contains predicate on the "nsec_key" field.
func NsecKeyContains(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldContains(FieldNsecKey, v))
}

// NsecKeyHasPrefix applies the HasPrefix predicate on the "nsec_key" field.
func NsecKeyHasPrefix(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldHasPrefix(FieldNsecKey, v))
}

// NsecKeyHasSuffix applies the HasSuffix predicate on the "nsec_key" field.
func NsecKeyHasSuffix(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldHasSuffix(FieldNsecKey, v))
}

// NsecKeyIsNil applies the IsNil predicate on the "nsec_key" field.
func NsecKeyIsNil() predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldIsNull(FieldNsecKey))
}

// NsecKeyNotNil applies the NotNil predicate on the "nsec_key" field.
func NsecKeyNotNil() predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNotNull(FieldNsecKey))
}

// NsecKeyEqualFold applies the EqualFold predicate on the "nsec_key" field.
func NsecKeyEqualFold(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEqualFold(FieldNsecKey, v))
}

// NsecKeyContainsFold applies the ContainsFold predicate on the "nsec_key" field.
func NsecKeyContainsFold(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldContainsFold(FieldNsecKey, v))
}

// NpubKeyEQ applies the EQ predicate on the "npub_key" field.
func NpubKeyEQ(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldNpubKey, v))
}

// NpubKeyNEQ applies the NEQ predicate on the "npub_key" field.
func NpubKeyNEQ(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNEQ(FieldNpubKey, v))
}

// NpubKeyIn applies the In predicate on the "npub_key" field.
func NpubKeyIn(vs ...string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldIn(FieldNpubKey, vs...))
}

// NpubKeyNotIn applies the NotIn predicate on the "npub_key" field.
func NpubKeyNotIn(vs ...string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNotIn(FieldNpubKey, vs...))
}

// NpubKeyGT applies the GT predicate on the "npub_key" field.
func NpubKeyGT(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGT(FieldNpubKey, v))
}

// NpubKeyGTE applies the GTE predicate on the "npub_key" field.
func NpubKeyGTE(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGTE(FieldNpubKey, v))
}

// NpubKeyLT applies the LT predicate on the "npub_key" field.
func NpubKeyLT(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLT(FieldNpubKey, v))
}

// NpubKeyLTE applies the LTE predicate on the "npub_key" field.
func NpubKeyLTE(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLTE(FieldNpubKey, v))
}

// NpubKeyContains applies the Contains predicate on the "npub_key" field.
func NpubKeyContains(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldContains(FieldNpubKey, v))
}

// NpubKeyHasPrefix applies the HasPrefix predicate on the "npub_key" field.
func NpubKeyHasPrefix(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldHasPrefix(FieldNpubKey, v))
}

// NpubKeyHasSuffix applies the HasSuffix predicate on the "npub_key" field.
func NpubKeyHasSuffix(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldHasSuffix(FieldNpubKey, v))
}

// NpubKeyIsNil applies the IsNil predicate on the "npub_key" field.
func NpubKeyIsNil() predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldIsNull(FieldNpubKey))
}

// NpubKeyNotNil applies the NotNil predicate on the "npub_key" field.
func NpubKeyNotNil() predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNotNull(FieldNpubKey))
}

// NpubKeyEqualFold applies the EqualFold predicate on the "npub_key" field.
func NpubKeyEqualFold(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEqualFold(FieldNpubKey, v))
}

// NpubKeyContainsFold applies the ContainsFold predicate on the "npub_key" field.
func NpubKeyContainsFold(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldContainsFold(FieldNpubKey, v))
}

// PrivateKeyHexEQ applies the EQ predicate on the "private_key_hex" field.
func PrivateKeyHexEQ(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldPrivateKeyHex, v))
}

// PrivateKeyHexNEQ applies the NEQ predicate on the "private_key_hex" field.
func PrivateKeyHexNEQ(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNEQ(FieldPrivateKeyHex, v))
}

// PrivateKeyHexIn applies the In predicate on the "private_key_hex" field.
func PrivateKeyHexIn(vs ...string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldIn(FieldPrivateKeyHex, vs...))
}

// PrivateKeyHexNotIn applies the NotIn predicate on the "private_key_hex" field.
func PrivateKeyHexNotIn(vs ...string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNotIn(FieldPrivateKeyHex, vs...))
}

// PrivateKeyHexGT applies the GT predicate on the "private_key_hex" field.
func PrivateKeyHexGT(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGT(FieldPrivateKeyHex, v))
}

// PrivateKeyHexGTE applies the GTE predicate on the "private_key_hex" field.
func PrivateKeyHexGTE(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGTE(FieldPrivateKeyHex, v))
}

// PrivateKeyHexLT applies the LT predicate on the "private_key_hex" field.
func PrivateKeyHexLT(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLT(FieldPrivateKeyHex, v))
}

// PrivateKeyHexLTE applies the LTE predicate on the "private_key_hex" field.
func PrivateKeyHexLTE(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLTE(FieldPrivateKeyHex, v))
}

// PrivateKeyHexContains applies the Contains predicate on the "private_key_hex" field.
func PrivateKeyHexContains(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldContains(FieldPrivateKeyHex, v))
}

// PrivateKeyHexHasPrefix applies the HasPrefix predicate on the "private_key_hex" field.
func PrivateKeyHexHasPrefix(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldHasPrefix(FieldPrivateKeyHex, v))
}

// PrivateKeyHexHasSuffix applies the HasSuffix predicate on the "private_key_hex" field.
func PrivateKeyHexHasSuffix(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldHasSuffix(FieldPrivateKeyHex, v))
}

// PrivateKeyHexIsNil applies the IsNil predicate on the "private_key_hex" field.
func PrivateKeyHexIsNil() predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldIsNull(FieldPrivateKeyHex))
}

// PrivateKeyHexNotNil applies the NotNil predicate on the "private_key_hex" field.
func PrivateKeyHexNotNil() predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNotNull(FieldPrivateKeyHex))
}

// PrivateKeyHexEqualFold applies the EqualFold predicate on the "private_key_hex" field.
func PrivateKeyHexEqualFold(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEqualFold(FieldPrivateKeyHex, v))
}

// PrivateKeyHexContainsFold applies the ContainsFold predicate on the "private_key_hex" field.
func PrivateKeyHexContainsFold(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldContainsFold(FieldPrivateKeyHex, v))
}

// PublicKeyHexEQ applies the EQ predicate on the "public_key_hex" field.
func PublicKeyHexEQ(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldPublicKeyHex, v))
}

// PublicKeyHexNEQ applies the NEQ predicate on the "public_key_hex" field.
func PublicKeyHexNEQ(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNEQ(FieldPublicKeyHex, v))
}

// PublicKeyHexIn applies the In predicate on the "public_key_hex" field.
func PublicKeyHexIn(vs ...string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldIn(FieldPublicKeyHex, vs...))
}

// PublicKeyHexNotIn applies the NotIn predicate on the "public_key_hex" field.
func PublicKeyHexNotIn(vs ...string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNotIn(FieldPublicKeyHex, vs...))
}

// PublicKeyHexGT applies the GT predicate on the "public_key_hex" field.
func PublicKeyHexGT(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGT(FieldPublicKeyHex, v))
}

// PublicKeyHexGTE applies the GTE predicate on the "public_key_hex" field.
func PublicKeyHexGTE(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldGTE(FieldPublicKeyHex, v))
}

// PublicKeyHexLT applies the LT predicate on the "public_key_hex" field.
func PublicKeyHexLT(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLT(FieldPublicKeyHex, v))
}

// PublicKeyHexLTE applies the LTE predicate on the "public_key_hex" field.
func PublicKeyHexLTE(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldLTE(FieldPublicKeyHex, v))
}

// PublicKeyHexContains applies the Contains predicate on the "public_key_hex" field.
func PublicKeyHexContains(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldContains(FieldPublicKeyHex, v))
}

// PublicKeyHexHasPrefix applies the HasPrefix predicate on the "public_key_hex" field.
func PublicKeyHexHasPrefix(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldHasPrefix(FieldPublicKeyHex, v))
}

// PublicKeyHexHasSuffix applies the HasSuffix predicate on the "public_key_hex" field.
func PublicKeyHexHasSuffix(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldHasSuffix(FieldPublicKeyHex, v))
}

// PublicKeyHexIsNil applies the IsNil predicate on the "public_key_hex" field.
func PublicKeyHexIsNil() predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldIsNull(FieldPublicKeyHex))
}

// PublicKeyHexNotNil applies the NotNil predicate on the "public_key_hex" field.
func PublicKeyHexNotNil() predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNotNull(FieldPublicKeyHex))
}

// PublicKeyHexEqualFold applies the EqualFold predicate on the "public_key_hex" field.
func PublicKeyHexEqualFold(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEqualFold(FieldPublicKeyHex, v))
}

// PublicKeyHexContainsFold applies the ContainsFold predicate on the "public_key_hex" field.
func PublicKeyHexContainsFold(v string) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldContainsFold(FieldPublicKeyHex, v))
}

// PublishNostrEQ applies the EQ predicate on the "publish_nostr" field.
func PublishNostrEQ(v bool) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldEQ(FieldPublishNostr, v))
}

// PublishNostrNEQ applies the NEQ predicate on the "publish_nostr" field.
func PublishNostrNEQ(v bool) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNEQ(FieldPublishNostr, v))
}

// PublishNostrIsNil applies the IsNil predicate on the "publish_nostr" field.
func PublishNostrIsNil() predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldIsNull(FieldPublishNostr))
}

// PublishNostrNotNil applies the NotNil predicate on the "publish_nostr" field.
func PublishNostrNotNil() predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.FieldNotNull(FieldPublishNostr))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.TwitterProfile) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.TwitterProfile) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.TwitterProfile) predicate.TwitterProfile {
	return predicate.TwitterProfile(sql.NotPredicates(p))
}
