// Code generated by ent, DO NOT EDIT.

package nostrnotesfetchhistory

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"freefrom.space/nobot/core/predicate"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldContainsFold(FieldID, id))
}

// PublishAt applies equality check predicate on the "publish_at" field. It's identical to PublishAtEQ.
func PublishAt(v time.Time) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldEQ(FieldPublishAt, v))
}

// PublicKeyHex applies equality check predicate on the "public_key_hex" field. It's identical to PublicKeyHexEQ.
func PublicKeyHex(v string) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldEQ(FieldPublicKeyHex, v))
}

// Context applies equality check predicate on the "context" field. It's identical to ContextEQ.
func Context(v string) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldEQ(FieldContext, v))
}

// PublishAtEQ applies the EQ predicate on the "publish_at" field.
func PublishAtEQ(v time.Time) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldEQ(FieldPublishAt, v))
}

// PublishAtNEQ applies the NEQ predicate on the "publish_at" field.
func PublishAtNEQ(v time.Time) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldNEQ(FieldPublishAt, v))
}

// PublishAtIn applies the In predicate on the "publish_at" field.
func PublishAtIn(vs ...time.Time) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldIn(FieldPublishAt, vs...))
}

// PublishAtNotIn applies the NotIn predicate on the "publish_at" field.
func PublishAtNotIn(vs ...time.Time) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldNotIn(FieldPublishAt, vs...))
}

// PublishAtGT applies the GT predicate on the "publish_at" field.
func PublishAtGT(v time.Time) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldGT(FieldPublishAt, v))
}

// PublishAtGTE applies the GTE predicate on the "publish_at" field.
func PublishAtGTE(v time.Time) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldGTE(FieldPublishAt, v))
}

// PublishAtLT applies the LT predicate on the "publish_at" field.
func PublishAtLT(v time.Time) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldLT(FieldPublishAt, v))
}

// PublishAtLTE applies the LTE predicate on the "publish_at" field.
func PublishAtLTE(v time.Time) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldLTE(FieldPublishAt, v))
}

// PublicKeyHexEQ applies the EQ predicate on the "public_key_hex" field.
func PublicKeyHexEQ(v string) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldEQ(FieldPublicKeyHex, v))
}

// PublicKeyHexNEQ applies the NEQ predicate on the "public_key_hex" field.
func PublicKeyHexNEQ(v string) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldNEQ(FieldPublicKeyHex, v))
}

// PublicKeyHexIn applies the In predicate on the "public_key_hex" field.
func PublicKeyHexIn(vs ...string) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldIn(FieldPublicKeyHex, vs...))
}

// PublicKeyHexNotIn applies the NotIn predicate on the "public_key_hex" field.
func PublicKeyHexNotIn(vs ...string) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldNotIn(FieldPublicKeyHex, vs...))
}

// PublicKeyHexGT applies the GT predicate on the "public_key_hex" field.
func PublicKeyHexGT(v string) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldGT(FieldPublicKeyHex, v))
}

// PublicKeyHexGTE applies the GTE predicate on the "public_key_hex" field.
func PublicKeyHexGTE(v string) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldGTE(FieldPublicKeyHex, v))
}

// PublicKeyHexLT applies the LT predicate on the "public_key_hex" field.
func PublicKeyHexLT(v string) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldLT(FieldPublicKeyHex, v))
}

// PublicKeyHexLTE applies the LTE predicate on the "public_key_hex" field.
func PublicKeyHexLTE(v string) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldLTE(FieldPublicKeyHex, v))
}

// PublicKeyHexContains applies the Contains predicate on the "public_key_hex" field.
func PublicKeyHexContains(v string) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldContains(FieldPublicKeyHex, v))
}

// PublicKeyHexHasPrefix applies the HasPrefix predicate on the "public_key_hex" field.
func PublicKeyHexHasPrefix(v string) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldHasPrefix(FieldPublicKeyHex, v))
}

// PublicKeyHexHasSuffix applies the HasSuffix predicate on the "public_key_hex" field.
func PublicKeyHexHasSuffix(v string) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldHasSuffix(FieldPublicKeyHex, v))
}

// PublicKeyHexEqualFold applies the EqualFold predicate on the "public_key_hex" field.
func PublicKeyHexEqualFold(v string) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldEqualFold(FieldPublicKeyHex, v))
}

// PublicKeyHexContainsFold applies the ContainsFold predicate on the "public_key_hex" field.
func PublicKeyHexContainsFold(v string) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldContainsFold(FieldPublicKeyHex, v))
}

// ContextEQ applies the EQ predicate on the "context" field.
func ContextEQ(v string) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldEQ(FieldContext, v))
}

// ContextNEQ applies the NEQ predicate on the "context" field.
func ContextNEQ(v string) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldNEQ(FieldContext, v))
}

// ContextIn applies the In predicate on the "context" field.
func ContextIn(vs ...string) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldIn(FieldContext, vs...))
}

// ContextNotIn applies the NotIn predicate on the "context" field.
func ContextNotIn(vs ...string) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldNotIn(FieldContext, vs...))
}

// ContextGT applies the GT predicate on the "context" field.
func ContextGT(v string) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldGT(FieldContext, v))
}

// ContextGTE applies the GTE predicate on the "context" field.
func ContextGTE(v string) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldGTE(FieldContext, v))
}

// ContextLT applies the LT predicate on the "context" field.
func ContextLT(v string) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldLT(FieldContext, v))
}

// ContextLTE applies the LTE predicate on the "context" field.
func ContextLTE(v string) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldLTE(FieldContext, v))
}

// ContextContains applies the Contains predicate on the "context" field.
func ContextContains(v string) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldContains(FieldContext, v))
}

// ContextHasPrefix applies the HasPrefix predicate on the "context" field.
func ContextHasPrefix(v string) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldHasPrefix(FieldContext, v))
}

// ContextHasSuffix applies the HasSuffix predicate on the "context" field.
func ContextHasSuffix(v string) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldHasSuffix(FieldContext, v))
}

// ContextEqualFold applies the EqualFold predicate on the "context" field.
func ContextEqualFold(v string) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldEqualFold(FieldContext, v))
}

// ContextContainsFold applies the ContainsFold predicate on the "context" field.
func ContextContainsFold(v string) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.FieldContainsFold(FieldContext, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.NostrNotesFetchHistory) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.NostrNotesFetchHistory) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.NostrNotesFetchHistory) predicate.NostrNotesFetchHistory {
	return predicate.NostrNotesFetchHistory(sql.NotPredicates(p))
}
