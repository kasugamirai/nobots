// Code generated by ent, DO NOT EDIT.

package nostrnotesfetchhistory

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the nostrnotesfetchhistory type in the database.
	Label = "nostr_notes_fetch_history"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldPublishAt holds the string denoting the publish_at field in the database.
	FieldPublishAt = "publish_at"
	// FieldPublicKeyHex holds the string denoting the public_key_hex field in the database.
	FieldPublicKeyHex = "public_key_hex"
	// FieldContext holds the string denoting the context field in the database.
	FieldContext = "context"
	// Table holds the table name of the nostrnotesfetchhistory in the database.
	Table = "nostr_notes_fetch_histories"
)

// Columns holds all SQL columns for nostrnotesfetchhistory fields.
var Columns = []string{
	FieldID,
	FieldPublishAt,
	FieldPublicKeyHex,
	FieldContext,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// IDValidator is a validator for the "id" field. It is called by the builders before save.
	IDValidator func(string) error
)

// OrderOption defines the ordering options for the NostrNotesFetchHistory queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByPublishAt orders the results by the publish_at field.
func ByPublishAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPublishAt, opts...).ToFunc()
}

// ByPublicKeyHex orders the results by the public_key_hex field.
func ByPublicKeyHex(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPublicKeyHex, opts...).ToFunc()
}

// ByContext orders the results by the context field.
func ByContext(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldContext, opts...).ToFunc()
}
